import{j as c}from"../jse/index-index-CuT9J82M.js";import"./index-ItegxLkj.js";import{e as m,C as x,B as h,f as s,g as y,h as b}from"./sortable.esm-CcMcRktF.js";import"./index-CNgUcgqS.js";import{a as C,c as j,B as k}from"./Component-0YPDwg8K.js";import{C as w,a as v,b as N}from"./card-CaO4-TpS.js";const D=C("GripVertical",[["circle",{cx:"9",cy:"12",r:"1",key:"1vctgf"}],["circle",{cx:"9",cy:"5",r:"1",key:"hp0tcf"}],["circle",{cx:"9",cy:"19",r:"1",key:"fkjjf6"}],["circle",{cx:"15",cy:"12",r:"1",key:"1tmaij"}],["circle",{cx:"15",cy:"5",r:"1",key:"19l28e"}],["circle",{cx:"15",cy:"19",r:"1",key:"f4zoj3"}]]);function S({task:o,isOverlay:i}){const{setNodeRef:l,attributes:d,listeners:t,transform:n,transition:p,isDragging:f}=m({id:o.id,data:{type:"Task",task:o},attributes:{roleDescription:"Task"}}),e={transition:p,transform:x.Translate.toString(n)},r=j("",{variants:{dragging:{over:"ring-2 opacity-30",overlay:"ring-2 ring-primary"}}}),a=()=>{if(i)return"overlay";if(f)return"over"};return c.jsxs(w,{className:r({dragging:a()}),ref:l,style:e,children:[c.jsxs(v,{className:"space-between border-secondary relative flex flex-row border-b-2 px-3 py-3",children:[c.jsxs(k,{variant:"ghost",...d,...t,className:"text-secondary-foreground/50 -ml-2 h-auto cursor-grab p-1",children:[c.jsx("span",{className:"sr-only",children:"Move task"}),c.jsx(D,{})]}),c.jsx(h,{className:"ml-auto font-semibold",variant:"outline",children:"任务"})]}),c.jsx(N,{className:"whitespace-pre-wrap px-3 pb-6 pt-3 text-left",children:o.content})]})}const I=Object.freeze(Object.defineProperty({__proto__:null,TaskCard:S},Symbol.toStringTag,{value:"Module"})),T=[s.Down,s.Right,s.Up,s.Left],M=(o,{context:{active:i,droppableRects:l,droppableContainers:d,collisionRect:t}})=>{if(T.includes(o.code)){if(o.preventDefault(),!i||!t)return;const n=[];d.getEnabled().forEach(e=>{if(!e||e?.disabled)return;const r=l.get(e.id);if(!r)return;const a=e.data.current;if(a){const{type:u,children:g}=a;if(u==="Column"&&g?.length>0&&i.data.current?.type!=="Column")return}switch(o.code){case s.Down:{if(i.data.current?.type==="Column")return;t.top<r.top&&n.push(e);break}case s.Left:{t.left>=r.left+r.width&&n.push(e);break}case s.Right:{t.left+t.width<=r.left&&n.push(e);break}case s.Up:{if(i.data.current?.type==="Column")return;t.top>r.top&&n.push(e);break}}});const p=y({collisionRect:t,droppableRects:l,droppableContainers:n}),f=b(p,"id");if(f!==null){const e=d.get(f),r=e?.node.current,a=e?.rect.current;if(r&&a)return{x:a.left,y:a.top}}}};export{D as G,S as T,I as a,M as c};
